Players starting with $1,500
Gaining $200 when passing Go
Rolling of dice to move
Taking an extra turn if the roll doubles
Purchasing/Selling properties from/to bank
Paying owner of property when landing on their properties
Railroads spaces
Tax/Utility spaces
Jail and Go to Jail spaces

Choose two Rules of Monopoly to implement:
Chance or Community Chest cards
Bankruptcy
Upgrading of properties
Trading between players
Mortgaging your properties

Creating the following classes Link, CircularLinkedList, Player, BoardSpace, and Main


Pseudocode:
Link<T> class:
    Link next
    T data
    constructor Link(T newData)
        data = newData

    replace(T newData)

Circular Linked List<T>:
    Link first

    constructor()
        first = null

    insertFirst(T newData)

    find(T targetData)

    replace(T targetData, newData)

    delete(T targetData)

Player:
    String name
    Link<BoardSpace> location
    int money
    int turnsLeftInJail
    ArrayList<BoardSpace> properties

    constructor(name)

BoardSpace:
    String type ("Property", "GO", "Chance", "Community Chest", "Utility", "Railroad", "To Jail", "Tax", "Blank")
    constructor(type)

Property extends BoardSpace:
    Player owner

    String colorGroup ("A", "B", "C", ...)
    boolean isMonopoly

    String name
    int price
    int rent
    constructor(name, price, rent)
        super(Property)

Utility extends BoardSpace:
    Player owner
    boolean ifBothOwned
    int price

    //4 if 1 owned, 10 if both owned

Railroad extends BoardSpace
    Player owner
    int rent

    String name

    int numOwnedBySamePlayer

Tax extends BoardSpace:
    int fixedTax (Luxury is 75) (Income 200)
    double dynamicTax (Luxury is null) (Income is 0.10)

Game:
    LinkList<BoardSpace> spaces
    LinkList<PLayer> playerTurnOrder

    constructor()

    setup()
        Ask for player names
        Setup linkedlists

    next()
        player = playerTurnOrder.next
        playerTurn(player)

        for player in Players:
            checkIfBankrupt(player)

        if linklist's first.next == first:
            print(Player name wins!)

    checkIfBankrupt(player)
        remove from linklist if bankrupt
        make blank spaces where they had properties

    playerTurn(player)
        If in jail
            numOfTurnsLeftInJail--
            Roll
            If double they are out
                Roll again to move
            If numOfTurnsLeftInJail == 0
                lose 50$
                Roll again to move

        Normal
            Loop
                Roll
                Move given spaces (check if go while happens and give 200)
                if double
                    numDoubles++
                    if numDoubles==3
                        goToJail
                    else
                        continue
                else
                    break
            Do stuff depending on space

        while True:
            Ask to offer trade

    propertyLand(player)
        if unowned
            ask to purchase
        else
            pay rent

    utilityLand(player, int[] diceRoll)
    taxLand(player)
    railroadLand(player)
    chanceLand(player)
    communityChestLand(player)

    trade(Player offeror)

    int[] rollDice() (returns [random 1-6, random 1-6])

    printBoard()
        Example Print:
            --------------------------------------------------------------------------------
            | [JAIL] [ C1 ] [ EC ] [ C2 ] [ C3 ] [ R2 ] [ D1 ] [ CC ] [ D2 ] [ D3 ] [FrPk] |
            | [ B3 ] -------------------------------------------------------------- [ E1 ] |
            | [ B2 ] |                                                            | [ CH ] |
            | [ CH ] |                                                            | [ E2 ] |
            | [ B1 ] |                                                            | [ E3 ] |
            | [ R1 ] |                      M O N O P O L Y                       | [ R3 ] |
            | [InTx] |                                                            | [ F1 ] |
            | [ A2 ] |                                                            | [ F2 ] |
            | [ CC ] |                                                            | [ WW ] |
            | [ A1 ] -------------------------------------------------------------- [ F3 ] |
            | [ GO ] [ H2 ] [LuTx] [ H1 ] [ CH ] [ R4 ] [ G3 ] [ CC ] [ G2 ] [ G1 ] [ToJl] |
            --------------------------------------------------------------------------------

Main:
    Create game
    Game.setup

    while(true)
        Game.next


